name: Publish Mod

on:
  workflow_call:
    inputs:
      INSTALLER_NAME:
        type: string
        required: true
      MOD_NEXUS_ID:
        type: string
        required: true
      MOD_NAME:
        type: string
        required: true
      MOD_VERSION:
        type: string
        required: true
      MOD_DESCRIPTION:
        type: string
        required: true
      MOD_CHANGELOG:
        type: string
        required: true
      GAME_NAME:
        type: string
        required: true
    secrets:
      NEXUS_API_KEY:
        required: true
      NEXUS_COOKIE:
        required: true
jobs:
  github:
    runs-on: windows-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ${{inputs.INSTALLER_NAME}}
        path: ${{inputs.INSTALLER_NAME}}

    - name: zip
      shell: pwsh
      run: Compress-Archive -Path "${{inputs.INSTALLER_NAME}}" -DestinationPath "${{inputs.INSTALLER_NAME}}.zip"

    - name: Publish GitHub Release
      uses: svenstaro/upload-release-action@2.3.0
      with:
        asset_name: "${{ inputs.INSTALLER_NAME }}.zip"
        file: "${{ github.workspace }}/${{ inputs.INSTALLER_NAME }}.zip"
  
  nexus:
    runs-on: windows-latest
    if: inputs.MOD_NEXUS_ID != '' && inputs.MOD_NAME != ''
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: ${{inputs.INSTALLER_NAME}}
        path: ${{inputs.INSTALLER_NAME}}
    
    - name: zip
      id: zip
      shell: pwsh
      run: |
        Compress-Archive -Path "${{inputs.INSTALLER_NAME}}" -DestinationPath "${{inputs.INSTALLER_NAME}}.zip"
        echo "::set-output name=FILE::${{inputs.INSTALLER_NAME}}.zip"
    
    - name: Download NexusUploader
      run: dotnet tool install -g NexusUploader

    - name: Upload files to Nexus
      # https://github.com/agc93/nexus-uploader
      env:
        UNEX_COOKIES: ./cookies.txt
        UNEX_APIKEY: ${{ secrets.NEXUS_API_KEY }}
        UNEX_GAME: ${{ inputs.GAME_NAME }}
        UNEX_MODID: ${{ inputs.MOD_NEXUS_ID }}
        UNEX_FILENAME: '${{ inputs.MOD_NAME }}'
        UNEX_FILEDESCRIPTION: |-
          See Description -> Requirements for installation instructions.
          PDB is for crash debugging and can be removed.
        UNEX_PREVIOUSFILE: "auto"
        file: ${{ steps.zip.outputs.FILE }}
        version: ${{ inputs.MOD_VERSION }}
        changelog: ${{ inputs.MOD_CHANGELOG }}
      run: |
        '${{ secrets.NEXUS_COOKIE }}' | Out-File $env:UNEX_COOKIES
        unex check
        unex upload $env:UNEX_MODID $env:file -v $env:version
        unex changelog $env:version "$env:changelog"
    

